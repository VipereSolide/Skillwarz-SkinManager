Des fichiers skin.swskin qui contiennent:

````````````````````````````````````````````````` SKIN.SWSKIN ```````````````````````````````````````````````
skin_name: ""
skin_description: ""
skin_profile_picture: "profile_picture_path" || "null"

skin_textures
{
	albedo: "albedo_path" || "null"
	detail: "detail_path" || "null"
	emission: "emission_path" || "null"
	metallic: "metallic_path" || "null"
	normal: "normal_path" || "null"
	height: "height_path" || "null"
	occlusion: "occlusion_path" || "null"
	default_path: "default_path" || "DefaultPath.FullPath"
}
skin_options
{
	albedo_color: "r,g,b,a" || "null"
	emission_color: "r,g,b,a" || "null"
	emission_intensity: "0.0f" || "null"
	emission_type: "EmissionType.None" || "EmissionType.IntensityChange" || "EmissionType.ColorChange"
	metallic_amount: "1.0f" || "null"
	normal_amount: "1.0f" || "null"
	height_amount: "1.0f" || "null"
}

isEnabled: true
____________________________________________________________________________________________________________



Un script qui interpr√®te les fichiers .swskin pour donner une classe "SkinData" qui contient:

````````````````````````````````````````````````` SkinDataInterpreter.cs ``````````````````````````````````````````````
namespace VS.SW.SkinManager
{
	using System;
	using System.IO;
	using UnityEngine;

	public static class SkinDataInterpreter
	{
		public static SkinData GetSkinData(string value)
		{
			SkinData _output = new SkinData();

			string[] _valueFileLines = value.Split('\n'.ToCharArray());

			string _outputSkinName = _valueFileLines[0].Replace("skin_name: ","").Replace("\"","");
			string _outputSkinDescription = _valueFileLines[1].Replace("skin_description: ","").Replace("\"","");
			
			// <STRING REFERENCES>
			string _outputSkinProfilePicturePath = _valueFileLines[2].Replace("skin_profile_picture: ","").Replace("\"","");

			string[] _outputSkinTexturePaths = new string[7]
			{
				_valueFileLines[6].Replace("albedo: ","").Replace("\"",""),
				_valueFileLines[7].Replace("detail: ","").Replace("\"",""),
				_valueFileLines[8].Replace("emission: ","").Replace("\"",""),
				_valueFileLines[9].Replace("metallic: ","").Replace("\"",""),
				_valueFileLines[10].Replace("normal: ","").Replace("\"",""),
				_valueFileLines[11].Replace("height: ","").Replace("\"",""),
				_valueFileLines[12].Replace("occlusion: ","").Replace("\"","")
			};

			string _outputAlbedoColor = _valueFileLines[16].Replace("albedo_color: ","").Replace("\"","");
			string _outputEmissionColor = _valueFileLines[17].Replace("emission_color: ","").Replace("\"","");
			string _outputEmissionIntensity = _valueFileLines[18].Replace("emission_intensity: ","").Replace("\"","");
			string _outputEmissionType = _valueFileLines[19].Replace("emission_type: ","").Replace("\"","");
			string _outputMetallicAmount = _valueFileLines[20].Replace("metallic_amount: ","").Replace("\"","");
			string _outputNormalAmount = _valueFileLines[21].Replace("normal_amount: ","").Replace("\"","");
			string _outputHeightAmount = _valueFileLines[22].Replace("height_amount: ","").Replace("\"","");
			
			string _outputIsEnabled = _valueFileLines[26].Replace("isEnabled: ","").Replace("\"","");
			// <STRING REFERENCES />

			// <VALUE REFERENCES>

			Texture2D _skinProfilePicture = File.ReadAllBytes(_outputSkinProfilePicturePath)

			// <VALUE REFERENCES />

			return _output;
		}
	}
}
_______________________________________________________________________________________________________________________

````````````````````````````````````````````````` SkinData.cs ``````````````````````````````````````````````
namespace VS.SW.SkinManager
{
	using System;
	using UnityEngine;

	public enum EmissionType
	{
		None,
		IntensityChange,
		ColorChange
	}

	[Serializable]
	public class SkinData
	{
		[Header("Skin Data")]

		[SerializeField]
		private string skinName = "";

		[SerializeField]
		private string skinDescription = "";

		[SerializeField]
		private Texture2D skinProfilePicture = null;

		[SerializeField]
		private bool isEnabled = false;

		[SerializeField]
		private Texture2D[] skinTextures = new Texture2D[7] {null, null, null, null, null, null, null};

		[Space()]

		[SerializeField]
		private SkinDataProperties properties = new SkinDataProperties(Color.white, Color.black, 0.0f, EmissionType.None, 2.0f, 0.5f, 0.05f);

		public string SkinName { get { return this.skinName; } }
		public string SkinDescription { get { return this.skinDescription; } }
		public Texture2D SkinProfilePicture { get { return this.skinProfilePicture; } }
		public bool IsEnabled { get { return this.isEnabled; } }
		public Texture2D[] SkinTextures { get { return this.skinTextures; } }
		public SkinDataProperties Properties { get { return this.properties; } }

		public SkinData(string _skinName, string _skinDescription, Texture2D _skinProfilePicture, bool _isEnabled, Texture2D[] _skinTextures, SkinDataProperties _properties)
		{
			this.skinName = _skinName;
			this.skinDescription = _skinDescription;
			this.skinProfilePicture = _skinProfilePicture;
			this.isEnabled = _isEnabled;
			this.skinTextures = _skinTextures;
			this.properties = _properties;
		}

		public void SetData(string _skinName, string _skinDescription, Texture2D _skinProfilePicture, bool _isEnabled, Texture2D[] _skinTextures, SkinDataProperties _properties)
		{
			this.skinName = _skinName;
			this.skinDescription = _skinDescription;
			this.skinProfilePicture = _skinProfilePicture;
			this.isEnabled = _isEnabled;
			this.skinTextures = _skinTextures;
			this.properties = _properties;
		}

		public SkinData() {}
	}

	[Serializable]
	public class SkinDataProperties
	{
		[Header("Skin Properties Data")]

		[SerializeField]
		private Color albedoColor = Color.white;

		[SerializeField]
		private Color emissionColor = Color.black;

		[SerializeField] [Range(-10.0f,10.0f)]
		private float emissionIntensity = 0.0f;

		[SerializeField] [Range(0,3)]
		private EmissionType emissionType = EmissionType.None;

		[SerializeField]
		private float metallicAmount = 2.0f;

		[SerializeField]
		private float normalAmount = 0.5f;

		[SerializeField]
		private float heightAmount = 0.05f;

		public Color AlbedoColor { get { return this.albedoColor; } }
		public Color EmissionColor { get { return this.emissionColor; } }
		public float EmissionIntensity { get { return this.emissionIntensity; } }
		public EmissionType EmissionType { get { return this.emissionType; } }
		public float MetallicAmount { get { return this.metallicAmount; } }
		public float NormalAmount { get { return this.normalAmount; } }
		public float HeightAmount { get { return this.heightAmount; } }

		public SkinDataProperties(Color _albedoColor, Color _emissionColor, float _emissionIntensity, EmissionType _emissionType, float _metallicAmount, float _normalAmount, float _heightAmount)
		{
			this.albedoColor = _albedoColor;
			this.emissionColor = _emissionColor;
			this.emissionIntensity = _emissionIntensity;
			this.emissionType = _emissionType;
			this.metallicAmount = _metallicAmount;
			this.normalAmount = _normalAmount;
			this.heightAmount = _heightAmount;
		}

		public void SetData(Color _albedoColor, Color _emissionColor, float _emissionIntensity, EmissionType _emissionType, float _metallicAmount, float _normalAmount, float _heightAmount)
		{
			this.albedoColor = _albedoColor;
			this.emissionColor = _emissionColor;
			this.emissionIntensity = _emissionIntensity;
			this.emissionType = _emissionType;
			this.metallicAmount = _metallicAmount;
			this.normalAmount = _normalAmount;
			this.heightAmount = _heightAmount;
		}

		public SkinDataProperties() {}
	}
}
____________________________________________________________________________________________________________